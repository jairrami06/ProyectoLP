
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AS ASSERT ASSIGN ASYNC AWAIT BOOL BREAK CASE CATCH CLASS COLON COMMA CONST CONTINUE COVARIANT DECREMENT DEFAULT DEFERRED DIVIDE DO DOLLARSIGN DOT DOUBLE DOUBLE_COLON DYNAMIC ELSE ENUM EQUALS EXPORT EXTENDS EXTENSION EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET GREATER GREATER_EQUAL HIDE ID IF IMPLEMENTS IMPORT IN INCREMENT INT INTERFACE IS LATE LBRACKET LESS LESS_EQUAL LIBRARY LIST LPAREN LSBRACKET MAP MINUS MIXIN MODULE NDOUBLE NEW NOT NOT_EQUALS NULL NUM NUMBER NUMERAL OBJECT ON OPERATOR OR PART PLUS PRINT QUESTION RBRACKET REQUIRED RETHROW RETURN RPAREN RSBRACKET SEMICOLON SET SHOW STATIC STRING SUPER SWITCH SYNC TEXT THIS THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE WITH YIELDprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print\n                 | control_structures\n                 | function\n                 | list_definition\n                 | variable_definition\n                 | SEMICOLONvariable_definition : type ID ASSIGN expression SEMICOLON\n                           | DYNAMIC ID ASSIGN expression SEMICOLON\n                           | VAR ID ASSIGN expression SEMICOLON\n                           | STATIC type ID ASSIGN expression SEMICOLON\n                           | STATIC VAR ID ASSIGN expression SEMICOLON\n                           | STATIC DYNAMIC ID ASSIGN expression SEMICOLONprint : PRINT LPAREN RPAREN SEMICOLON\n             | PRINT LPAREN value RPAREN SEMICOLON\n             | PRINT LPAREN expression RPAREN SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : value PLUS valueexpression : valuecontrol_structures : if_block\n                          | if_block else_blockif_block : IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKETelse_block : ELSE LBRACKET statement_list RBRACKETconditions : condition\n                  | conditions AND condition\n                  | conditions OR conditioncondition : value comparator value\n                 | NOT valuecomparator : GREATER\n                  | LESS\n                  | EQUALS\n                  | GREATER_EQUAL\n                  | LESS_EQUALfunction : type ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET\n                | VOID ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET\n                | type ID LPAREN RPAREN LBRACKET statement_list RBRACKET\n                | VOID ID LPAREN RPAREN LBRACKET statement_list RBRACKETparameter_list : parameter\n                      | parameter_list COMMA parameterparameter : type ID\n                 | REQUIRED type IDtype : INT\n            | DOUBLE\n            | STRING\n            | BOOL\n            | LISTlist_definition : LIST LSBRACKET value_list RSBRACKET SEMICOLON\n                       | LIST LESS type GREATER ID ASSIGN LSBRACKET value_list RSBRACKET SEMICOLONvalue_list : value\n                  | value_list COMMA valuevalue : NUMBER\n             | NDOUBLE\n             | TEXT\n             | IDvalue : TRUE\n             | FALSE'
    
_lr_action_items = {'SEMICOLON':([0,2,3,4,5,6,7,8,9,11,23,25,38,41,42,43,44,45,46,47,63,64,66,71,77,78,81,84,85,99,100,101,102,103,104,105,106,110,112,114,115,118,119,120,121,122,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,147,148,],[9,9,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,63,-56,-57,-58,-59,-60,-61,9,-16,99,101,9,112,-24,115,118,119,-17,-23,-18,-19,-20,-21,-22,-28,9,-10,9,-52,-11,-12,134,135,136,9,9,9,9,9,-13,-14,-15,9,9,-41,9,-42,-27,-39,-40,148,-53,]),'PRINT':([0,2,3,4,5,6,7,8,9,11,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[10,10,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,10,-16,10,-17,-18,-28,10,-10,10,-52,-11,-12,10,10,10,10,10,-13,-14,-15,10,10,-41,10,-42,-27,-39,-40,-53,]),'VOID':([0,2,3,4,5,6,7,8,9,11,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[13,13,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,13,-16,13,-17,-18,-28,13,-10,13,-52,-11,-12,13,13,13,13,13,-13,-14,-15,13,13,-41,13,-42,-27,-39,-40,-53,]),'LIST':([0,2,3,4,5,6,7,8,9,11,17,23,25,30,47,48,50,63,71,76,99,101,106,109,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[14,14,-2,-4,-5,-6,-7,-8,-9,-25,36,-3,-26,36,14,36,36,-16,14,36,-17,-18,-28,36,14,-10,14,-52,-11,-12,14,14,14,14,14,-13,-14,-15,14,14,-41,14,-42,-27,-39,-40,-53,]),'DYNAMIC':([0,2,3,4,5,6,7,8,9,11,17,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[15,15,-2,-4,-5,-6,-7,-8,-9,-25,35,-3,-26,15,-16,15,-17,-18,-28,15,-10,15,-52,-11,-12,15,15,15,15,15,-13,-14,-15,15,15,-41,15,-42,-27,-39,-40,-53,]),'VAR':([0,2,3,4,5,6,7,8,9,11,17,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[16,16,-2,-4,-5,-6,-7,-8,-9,-25,34,-3,-26,16,-16,16,-17,-18,-28,16,-10,16,-52,-11,-12,16,16,16,16,16,-13,-14,-15,16,16,-41,16,-42,-27,-39,-40,-53,]),'STATIC':([0,2,3,4,5,6,7,8,9,11,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[17,17,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,17,-16,17,-17,-18,-28,17,-10,17,-52,-11,-12,17,17,17,17,17,-13,-14,-15,17,17,-41,17,-42,-27,-39,-40,-53,]),'IF':([0,2,3,4,5,6,7,8,9,11,23,25,47,63,71,99,101,106,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[18,18,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,18,-16,18,-17,-18,-28,18,-10,18,-52,-11,-12,18,18,18,18,18,-13,-14,-15,18,18,-41,18,-42,-27,-39,-40,-53,]),'INT':([0,2,3,4,5,6,7,8,9,11,17,23,25,30,47,48,50,63,71,76,99,101,106,109,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[19,19,-2,-4,-5,-6,-7,-8,-9,-25,19,-3,-26,19,19,19,19,-16,19,19,-17,-18,-28,19,19,-10,19,-52,-11,-12,19,19,19,19,19,-13,-14,-15,19,19,-41,19,-42,-27,-39,-40,-53,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,11,17,23,25,30,47,48,50,63,71,76,99,101,106,109,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[20,20,-2,-4,-5,-6,-7,-8,-9,-25,20,-3,-26,20,20,20,20,-16,20,20,-17,-18,-28,20,20,-10,20,-52,-11,-12,20,20,20,20,20,-13,-14,-15,20,20,-41,20,-42,-27,-39,-40,-53,]),'STRING':([0,2,3,4,5,6,7,8,9,11,17,23,25,30,47,48,50,63,71,76,99,101,106,109,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[21,21,-2,-4,-5,-6,-7,-8,-9,-25,21,-3,-26,21,21,21,21,-16,21,21,-17,-18,-28,21,21,-10,21,-52,-11,-12,21,21,21,21,21,-13,-14,-15,21,21,-41,21,-42,-27,-39,-40,-53,]),'BOOL':([0,2,3,4,5,6,7,8,9,11,17,23,25,30,47,48,50,63,71,76,99,101,106,109,110,112,114,115,118,119,123,127,129,131,132,134,135,136,137,138,139,140,141,143,144,145,148,],[22,22,-2,-4,-5,-6,-7,-8,-9,-25,22,-3,-26,22,22,22,22,-16,22,22,-17,-18,-28,22,22,-10,22,-52,-11,-12,22,22,22,22,22,-13,-14,-15,22,22,-41,22,-42,-27,-39,-40,-53,]),'$end':([1,2,3,4,5,6,7,8,9,11,23,25,63,99,101,106,112,115,118,119,134,135,136,139,141,143,144,145,148,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,-16,-17,-18,-28,-10,-52,-11,-12,-13,-14,-15,-41,-42,-27,-39,-40,-53,]),'RBRACKET':([3,4,5,6,7,8,9,11,23,25,63,71,99,101,106,112,115,118,119,129,132,134,135,136,137,138,139,140,141,143,144,145,148,],[-2,-4,-5,-6,-7,-8,-9,-25,-3,-26,-16,106,-17,-18,-28,-10,-52,-11,-12,139,141,-13,-14,-15,143,144,-41,145,-42,-27,-39,-40,-53,]),'LPAREN':([10,18,27,28,],[24,37,48,50,]),'ELSE':([11,143,],[26,-27,]),'ID':([12,13,14,15,16,19,20,21,22,24,29,33,34,35,36,37,49,54,55,62,65,67,68,69,70,72,82,83,86,87,88,90,91,92,93,94,95,96,97,111,142,],[27,28,-51,31,32,-47,-48,-49,-50,44,44,56,57,58,-51,44,44,44,44,44,44,44,44,44,44,107,44,117,44,44,44,44,44,44,-34,-35,-36,-37,-38,130,44,]),'LSBRACKET':([14,133,],[29,142,]),'LESS':([14,41,42,43,44,45,46,61,],[30,-56,-57,-58,-59,-60,-61,94,]),'GREATER':([19,20,21,22,36,41,42,43,44,45,46,53,61,],[-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,83,93,]),'RPAREN':([24,39,40,41,42,43,44,45,46,48,50,59,60,73,75,78,79,98,100,102,103,104,105,107,124,125,126,128,130,],[38,64,66,-56,-57,-58,-59,-60,-61,74,80,89,-29,108,-43,-24,113,-33,-23,-19,-20,-21,-22,-45,-30,-31,-32,-44,-46,]),'NUMBER':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,93,94,95,96,97,142,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-34,-35,-36,-37,-38,41,]),'NDOUBLE':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,93,94,95,96,97,142,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-34,-35,-36,-37,-38,42,]),'TEXT':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,93,94,95,96,97,142,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-34,-35,-36,-37,-38,43,]),'TRUE':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,93,94,95,96,97,142,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-34,-35,-36,-37,-38,45,]),'FALSE':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,93,94,95,96,97,142,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-34,-35,-36,-37,-38,46,]),'LBRACKET':([26,74,80,89,108,113,],[47,110,114,123,127,131,]),'ASSIGN':([27,31,32,56,57,58,117,],[49,54,55,86,87,88,133,]),'NOT':([37,90,91,],[62,62,62,]),'PLUS':([39,40,41,42,43,44,45,46,77,78,84,85,100,102,103,104,105,120,121,122,],[65,67,-56,-57,-58,-59,-60,-61,67,65,67,67,-23,67,67,67,67,67,67,67,]),'MINUS':([39,40,41,42,43,44,45,46,77,78,84,85,100,102,103,104,105,120,121,122,],[-24,68,-56,-57,-58,-59,-60,-61,68,-24,68,68,-23,68,68,68,68,68,68,68,]),'TIMES':([39,40,41,42,43,44,45,46,77,78,84,85,100,102,103,104,105,120,121,122,],[-24,69,-56,-57,-58,-59,-60,-61,69,-24,69,69,-23,69,69,69,69,69,69,69,]),'DIVIDE':([39,40,41,42,43,44,45,46,77,78,84,85,100,102,103,104,105,120,121,122,],[-24,70,-56,-57,-58,-59,-60,-61,70,-24,70,70,-23,70,70,70,70,70,70,70,]),'RSBRACKET':([41,42,43,44,45,46,51,52,116,146,],[-56,-57,-58,-59,-60,-61,81,-54,-55,147,]),'COMMA':([41,42,43,44,45,46,51,52,73,75,79,107,116,128,130,146,],[-56,-57,-58,-59,-60,-61,82,-54,109,-43,109,-45,-55,-44,-46,82,]),'EQUALS':([41,42,43,44,45,46,61,],[-56,-57,-58,-59,-60,-61,95,]),'GREATER_EQUAL':([41,42,43,44,45,46,61,],[-56,-57,-58,-59,-60,-61,96,]),'LESS_EQUAL':([41,42,43,44,45,46,61,],[-56,-57,-58,-59,-60,-61,97,]),'AND':([41,42,43,44,45,46,59,60,98,124,125,126,],[-56,-57,-58,-59,-60,-61,90,-29,-33,-30,-31,-32,]),'OR':([41,42,43,44,45,46,59,60,98,124,125,126,],[-56,-57,-58,-59,-60,-61,91,-29,-33,-30,-31,-32,]),'REQUIRED':([48,50,109,],[76,76,76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,47,110,114,123,127,131,],[2,71,129,132,137,138,140,]),'statement':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[3,23,3,23,3,3,3,3,23,3,23,23,23,23,]),'print':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'control_structures':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'function':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'list_definition':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'variable_definition':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'if_block':([0,2,47,71,110,114,123,127,129,131,132,137,138,140,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'type':([0,2,17,30,47,48,50,71,76,109,110,114,123,127,129,131,132,137,138,140,],[12,12,33,53,12,72,72,12,111,72,12,12,12,12,12,12,12,12,12,12,]),'else_block':([11,],[25,]),'value':([24,29,37,49,54,55,62,65,67,68,69,70,82,86,87,88,90,91,92,142,],[39,52,61,78,78,78,98,100,78,78,78,78,116,78,78,78,61,61,126,52,]),'expression':([24,49,54,55,67,68,69,70,86,87,88,],[40,77,84,85,102,103,104,105,120,121,122,]),'value_list':([29,142,],[51,146,]),'conditions':([37,],[59,]),'condition':([37,90,91,],[60,124,125,]),'parameter_list':([48,50,],[73,79,]),'parameter':([48,50,109,],[75,75,128,]),'comparator':([61,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizador_sintactico.py',7),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',10),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizador_sintactico.py',11),
  ('statement -> print','statement',1,'p_statement','analizador_sintactico.py',14),
  ('statement -> control_structures','statement',1,'p_statement','analizador_sintactico.py',15),
  ('statement -> function','statement',1,'p_statement','analizador_sintactico.py',16),
  ('statement -> list_definition','statement',1,'p_statement','analizador_sintactico.py',17),
  ('statement -> variable_definition','statement',1,'p_statement','analizador_sintactico.py',18),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',19),
  ('variable_definition -> type ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',23),
  ('variable_definition -> DYNAMIC ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',24),
  ('variable_definition -> VAR ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',25),
  ('variable_definition -> STATIC type ID ASSIGN expression SEMICOLON','variable_definition',6,'p_variable_definition','analizador_sintactico.py',26),
  ('variable_definition -> STATIC VAR ID ASSIGN expression SEMICOLON','variable_definition',6,'p_variable_definition','analizador_sintactico.py',27),
  ('variable_definition -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON','variable_definition',6,'p_variable_definition','analizador_sintactico.py',28),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','analizador_sintactico.py',32),
  ('print -> PRINT LPAREN value RPAREN SEMICOLON','print',5,'p_print','analizador_sintactico.py',33),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','analizador_sintactico.py',34),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',38),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',39),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',40),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',41),
  ('expression -> value PLUS value','expression',3,'p_expression_concat','analizador_sintactico.py',44),
  ('expression -> value','expression',1,'p_expression_value','analizador_sintactico.py',47),
  ('control_structures -> if_block','control_structures',1,'p_control_structures','analizador_sintactico.py',51),
  ('control_structures -> if_block else_block','control_structures',2,'p_control_structures','analizador_sintactico.py',52),
  ('if_block -> IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKET','if_block',7,'p_if_block','analizador_sintactico.py',55),
  ('else_block -> ELSE LBRACKET statement_list RBRACKET','else_block',4,'p_else_block','analizador_sintactico.py',58),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',61),
  ('conditions -> conditions AND condition','conditions',3,'p_conditions','analizador_sintactico.py',62),
  ('conditions -> conditions OR condition','conditions',3,'p_conditions','analizador_sintactico.py',63),
  ('condition -> value comparator value','condition',3,'p_condition','analizador_sintactico.py',66),
  ('condition -> NOT value','condition',2,'p_condition','analizador_sintactico.py',67),
  ('comparator -> GREATER','comparator',1,'p_comparator','analizador_sintactico.py',70),
  ('comparator -> LESS','comparator',1,'p_comparator','analizador_sintactico.py',71),
  ('comparator -> EQUALS','comparator',1,'p_comparator','analizador_sintactico.py',72),
  ('comparator -> GREATER_EQUAL','comparator',1,'p_comparator','analizador_sintactico.py',73),
  ('comparator -> LESS_EQUAL','comparator',1,'p_comparator','analizador_sintactico.py',74),
  ('function -> type ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET','function',8,'p_function','analizador_sintactico.py',78),
  ('function -> VOID ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET','function',8,'p_function','analizador_sintactico.py',79),
  ('function -> type ID LPAREN RPAREN LBRACKET statement_list RBRACKET','function',7,'p_function','analizador_sintactico.py',80),
  ('function -> VOID ID LPAREN RPAREN LBRACKET statement_list RBRACKET','function',7,'p_function','analizador_sintactico.py',81),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','analizador_sintactico.py',84),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','analizador_sintactico.py',85),
  ('parameter -> type ID','parameter',2,'p_parameter','analizador_sintactico.py',88),
  ('parameter -> REQUIRED type ID','parameter',3,'p_parameter','analizador_sintactico.py',89),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',93),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',94),
  ('type -> STRING','type',1,'p_type','analizador_sintactico.py',95),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',96),
  ('type -> LIST','type',1,'p_type','analizador_sintactico.py',97),
  ('list_definition -> LIST LSBRACKET value_list RSBRACKET SEMICOLON','list_definition',5,'p_list_definition','analizador_sintactico.py',101),
  ('list_definition -> LIST LESS type GREATER ID ASSIGN LSBRACKET value_list RSBRACKET SEMICOLON','list_definition',10,'p_list_definition','analizador_sintactico.py',102),
  ('value_list -> value','value_list',1,'p_value_list','analizador_sintactico.py',105),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','analizador_sintactico.py',106),
  ('value -> NUMBER','value',1,'p_value','analizador_sintactico.py',110),
  ('value -> NDOUBLE','value',1,'p_value','analizador_sintactico.py',111),
  ('value -> TEXT','value',1,'p_value','analizador_sintactico.py',112),
  ('value -> ID','value',1,'p_value','analizador_sintactico.py',113),
  ('value -> TRUE','value',1,'p_value_bool','analizador_sintactico.py',116),
  ('value -> FALSE','value',1,'p_value_bool','analizador_sintactico.py',117),
]
