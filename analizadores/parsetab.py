
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AS ASSERT ASSIGN ASYNC AWAIT BOOL BREAK CASE CATCH CLASS COLON COMMA COMMENT_MULTI COMMENT_SINGLE CONST CONTINUE COVARIANT DECREMENT DEFAULT DEFERRED DIVIDE DO DOLLARSIGN DOT DOUBLE DOUBLE_COLON DYNAMIC ELSE ENUM EQUALS EXPORT EXTENDS EXTENSION EXTERNAL FACTORY FALSE FINAL FINALLY FOR FUNCTION GET GREATER GREATER_EQUAL HIDE ID IF IMPLEMENTS IMPORT IN INCREMENT INT INTERFACE INT_DIVIDE IS LATE LBRACKET LENGTH LESS LESS_EQUAL LIBRARY LIST LPAREN LSBRACKET MAP MINUS MIXIN MODULE NDOUBLE NEW NOT NOT_EQUALS NULL NUM NUMBER NUMERAL OBJECT ON OPERATOR OR PART PLUS PRINT QUESTION RBRACKET READLINESYNC REQUIRED RETHROW RETURN RPAREN RSBRACKET SEMICOLON SET SHOW STATIC STDIN STRING SUPER SWITCH SYNC TEXT THIS THROW TIMES TRUE TRY TYPEDEF VAR VOID WHILE WITH YIELDprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print\n                 | data_input\n                 | set\n                 | map\n                 | constructor\n                 | control_structures\n                 | function\n                 | list_definition\n                 | variable_definition\n                 | variable_usage\n                 | call_function\n                 | return\n                 | COMMENT_MULTI\n                 | COMMENT_SINGLE\n                 | SEMICOLONreturn : RETURN expression SEMICOLONcontrol_structures : control_structures_if_else\n                          | control_structures_for\n                          | control_structures_whilevariable_usage : ID SEMICOLON\n                    | ID ASSIGN expression SEMICOLON\n    call_function : ID LPAREN argument_list RPAREN\n                     | ID LPAREN RPARENdata_input : STRING ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n               | STRING QUESTION ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLONlength : call_list DOT LENGTH\n              | TEXT DOT LENGTH\n              | ID DOT LENGTH\n    argument_list : expression\n                  | argument_list COMMA expression\n    \n    function : type ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET\n             | VOID ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET\n             | type ID LPAREN RPAREN LBRACKET statement_list RBRACKET\n             | VOID ID LPAREN RPAREN LBRACKET statement_list RBRACKET\n             | VOID ID LPAREN RPAREN LBRACKET RBRACKET\n             | VOID ID LPAREN parameter_list RPAREN LBRACKET RBRACKET\n    variable_definition : type ID ASSIGN expression SEMICOLON\n                        | DYNAMIC ID ASSIGN expression SEMICOLON\n                        | VAR ID ASSIGN expression SEMICOLON\n                        print : PRINT LPAREN RPAREN SEMICOLON\n             | PRINT LPAREN expression RPAREN SEMICOLON\n    expression : operations\n                  | conditions\n                  | length\n                  | call_function\n        operations : operand \n                  | operand operator operations    \n    \n        operand : NUMBER\n                  | NDOUBLE\n                  | ID\n    \n        operator : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | INT_DIVIDE\n    control_structures_if_else : if_block\n                          | if_block else_if_blocks\n                          | if_block else_if_blocks else_block\n                          | if_block else_blockif_block : IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKETelse_if_blocks : ELSE IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKET\n                      | else_if_blocks ELSE IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKETelse_block : ELSE LBRACKET statement_list RBRACKETconditions : condition\n                  | condition AND conditions\n                  | condition OR conditionscondition : value comparator value\n                 | NOT valuecomparator : GREATER\n                  | LESS\n                  | EQUALS\n                  | GREATER_EQUAL\n                  | LESS_EQUAL\n                  | NOT_EQUALSparameter_list : parameter\n                   | parameter_list COMMA parameterparameter : type ID\n              | REQUIRED type ID\n    call_list : LSBRACKET value_list RSBRACKET\n    \n    list_definition : LIST LESS type GREATER ID ASSIGN LSBRACKET value_list RSBRACKET SEMICOLON\n    value_list : value\n                  | value COMMA value_listtype : INT\n            | DOUBLE\n            | STRING\n            | BOOL\n    value : operand\n             | TEXT\n    value : TRUE\n             | FALSE\n    set : VAR ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON\n        | VAR ID ASSIGN LESS STRING GREATER LBRACKET RBRACKET SEMICOLON\n        | FINAL ID ASSIGN CONST LBRACKET value_list RBRACKET SEMICOLON\n    for_classic_initialization : INT ID ASSIGN NUMBER\n                          | DOUBLE ID ASSIGN NDOUBLEfor_classic_conditions : conditionsfor_classic_changes : ID comparator value\n                           | ID INCREMENT\n                           | ID DECREMENT\n                           | ID comparator value COMMA for_classic_changesfor_classic_parenthesis_content : for_classic_initialization SEMICOLON for_classic_conditions SEMICOLON for_classic_changesfor_classic : FOR LPAREN for_classic_parenthesis_content RPAREN LBRACKET statement_list RBRACKETfor_in_parenthesis_content : FINAL ID IN IDfor_in : FOR LPAREN for_in_parenthesis_content RPAREN LBRACKET statement_list RBRACKETfor_each_parenthesis_parenthesis_content : COLON ID\n                                                | COLON ID COMMA for_each_parenthesis_parenthesis_contentfor_each_parenthesis_content : FINAL ID LPAREN for_each_parenthesis_parenthesis_content RPAREN IN IDfor_each : FOR LPAREN for_each_parenthesis_content RPAREN LBRACKET statement_list RBRACKETcontrol_structures_for : for_classic\n                              | for_in\n                              | for_each\n    constructor_parenthesis_content : THIS DOT ID\n    | THIS DOT ID COMMA constructor_parenthesis_content\n    \n    constructor : ID LPAREN constructor_parenthesis_content RPAREN SEMICOLON\n    \n    function : type ID LPAREN parameter_list RPAREN ASSIGN GREATER expression\n    \n    control_structures_while : WHILE LPAREN conditions RPAREN LBRACKET statement_list RBRACKET\n    \n    map : map_declaration map_assignment\n    \n    map_declaration : MAP LESS key_type COMMA type GREATER ID ASSIGN\n    \n    map_assignment : LBRACKET map_contents RBRACKET\n    \n    map_contents : map_content\n                 | map_content COMMA map_contents\n    \n    map_content : key_value COLON value\n    \n    key_value : TEXT\n    \n    key_type : STRING\n    '
    
_lr_action_items = {'COMMENT_MULTI':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,16,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,16,-44,-117,-42,16,-40,16,-41,-66,16,16,16,16,16,16,16,16,16,-38,16,16,16,16,16,-94,16,-36,16,-39,-37,16,-119,-63,-105,-107,-111,-96,-34,-118,-35,16,16,-27,-95,16,-64,-28,-83,-65,]),'COMMENT_SINGLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,17,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,17,-44,-117,-42,17,-40,17,-41,-66,17,17,17,17,17,17,17,17,17,-38,17,17,17,17,17,-94,17,-36,17,-39,-37,17,-119,-63,-105,-107,-111,-96,-34,-118,-35,17,17,-27,-95,17,-64,-28,-83,-65,]),'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,25,26,27,34,35,36,37,44,49,53,59,60,61,62,63,64,65,68,69,70,74,75,77,78,83,88,92,105,125,126,127,128,133,136,142,146,147,150,151,154,157,159,167,171,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,227,228,236,239,242,244,245,246,251,252,253,254,255,260,261,265,267,268,270,271,272,273,277,278,279,280,281,282,287,289,290,291,292,293,296,297,303,304,305,306,307,308,312,313,314,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,49,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,105,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,146,-26,154,-19,-71,-90,-91,-53,-61,18,191,-43,195,198,-25,-24,203,-122,212,216,-49,-50,-68,-69,-29,-30,-31,-70,18,-44,-117,-42,18,-40,18,-41,-66,18,18,18,18,18,256,-99,265,18,18,18,18,-38,18,18,18,18,18,-97,-98,-94,290,18,-36,18,-39,-37,18,-119,-63,-105,-107,-111,303,305,-96,-34,-118,-35,18,18,-27,312,-95,313,18,-64,-28,-83,-65,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,19,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,19,-44,-117,-42,19,-40,19,-41,-66,19,19,19,19,19,19,19,19,19,-38,19,19,19,19,19,-94,19,-36,19,-39,-37,19,-119,-63,-105,-107,-111,-96,-34,-118,-35,19,19,-27,-95,19,-64,-28,-83,-65,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,57,60,61,62,63,64,65,68,69,70,74,75,76,77,78,88,99,101,105,125,126,127,128,133,136,146,151,154,156,159,166,172,173,174,175,176,177,178,179,182,185,195,198,203,209,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,103,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,132,-60,-62,-26,103,103,-19,-71,-90,-91,-53,-61,20,-43,-25,-24,202,-122,103,-49,-50,-68,-69,-29,-30,-31,-70,103,20,-44,-117,-42,103,20,-40,20,-41,-66,20,20,20,20,20,20,20,20,20,-38,20,20,20,20,20,-94,20,-36,20,-39,-37,20,-119,-63,-105,-107,-111,-96,-34,-118,-35,20,20,-27,-95,20,-64,-28,-83,-65,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,22,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,22,-44,-117,-42,22,-40,22,-41,-66,22,22,22,22,22,22,22,22,22,-38,22,22,22,22,22,-94,22,-36,22,-39,-37,22,-119,-63,-105,-107,-111,-96,-34,-118,-35,22,22,-27,-95,22,-64,-28,-83,-65,]),'FINAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,82,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,143,-26,-19,-71,-90,-91,-53,-61,23,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,23,-44,-117,-42,23,-40,23,-41,-66,23,23,23,23,23,23,23,23,23,-38,23,23,23,23,23,-94,23,-36,23,-39,-37,23,-119,-63,-105,-107,-111,-96,-34,-118,-35,23,23,-27,-95,23,-64,-28,-83,-65,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,31,32,34,35,36,37,39,40,41,44,45,47,48,49,50,53,60,61,62,63,64,65,68,69,70,72,73,74,75,77,78,80,81,88,93,100,103,104,105,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,133,136,143,144,145,146,151,152,153,154,155,159,161,162,170,172,173,174,175,176,177,178,179,181,184,185,191,195,198,203,204,210,211,212,214,216,219,221,222,223,224,225,226,229,239,242,244,245,246,248,251,252,253,254,255,256,259,265,268,269,270,271,272,273,274,277,278,279,280,281,282,290,291,292,293,296,297,298,301,303,305,307,308,312,313,314,315,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,46,51,52,-20,-21,-22,55,56,58,68,-59,-112,-113,-114,-86,-87,-89,-3,68,86,68,-23,68,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,128,128,-92,-93,-60,-62,128,128,-26,68,68,-88,68,-19,128,-54,-55,-56,-57,-58,128,128,68,128,-72,-73,-74,-75,-76,-77,-71,-90,-91,-53,-61,21,192,193,194,-43,-25,68,200,-24,128,-122,128,207,215,-49,-50,-68,-69,-29,-30,-31,-70,128,128,21,128,-44,-117,-42,128,21,243,-40,21,-41,128,-66,21,21,21,21,21,257,21,21,21,21,-38,275,21,21,21,21,21,284,286,-94,21,68,-36,21,-39,-37,128,21,-119,-63,-105,-107,-111,-96,-34,-118,-35,21,21,128,310,-27,-95,21,-64,-28,-83,-65,284,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,29,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,29,-44,-117,-42,29,-40,29,-41,-66,29,29,29,29,29,29,29,29,29,-38,29,29,29,29,29,-94,29,-36,29,-39,-37,29,-119,-63,-105,-107,-111,-96,-34,-118,-35,29,29,-27,-95,29,-64,-28,-83,-65,]),'LIST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,30,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,30,-44,-117,-42,30,-40,30,-41,-66,30,30,30,30,30,30,30,30,30,-38,30,30,30,30,30,-94,30,-36,30,-39,-37,30,-119,-63,-105,-107,-111,-96,-34,-118,-35,30,30,-27,-95,30,-64,-28,-83,-65,]),'DYNAMIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,31,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,31,-44,-117,-42,31,-40,31,-41,-66,31,31,31,31,31,31,31,31,31,-38,31,31,31,31,31,-94,31,-36,31,-39,-37,31,-119,-63,-105,-107,-111,-96,-34,-118,-35,31,31,-27,-95,31,-64,-28,-83,-65,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,32,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,32,-44,-117,-42,32,-40,32,-41,-66,32,32,32,32,32,32,32,32,32,-38,32,32,32,32,32,-94,32,-36,32,-39,-37,32,-119,-63,-105,-107,-111,-96,-34,-118,-35,32,32,-27,-95,32,-64,-28,-83,-65,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,33,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,33,-44,-117,-42,33,-40,33,-41,-66,33,33,33,33,33,33,33,33,33,-38,33,33,33,33,33,-94,33,-36,33,-39,-37,33,-119,-63,-105,-107,-111,-96,-34,-118,-35,33,33,-27,-95,33,-64,-28,-83,-65,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,38,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,38,-44,-117,-42,38,-40,38,-41,-66,38,38,38,38,38,38,38,38,38,-38,38,38,38,38,38,-94,38,-36,38,-39,-37,38,-119,-63,-105,-107,-111,-96,-34,-118,-35,38,38,-27,-95,38,-64,-28,-83,-65,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,57,60,61,62,63,64,65,68,69,70,74,75,77,78,82,88,99,101,105,125,126,127,128,133,136,146,151,154,159,166,172,173,174,175,176,177,178,179,182,185,195,198,203,209,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,39,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,144,-26,39,39,-19,-71,-90,-91,-53,-61,39,-43,-25,-24,-122,39,-49,-50,-68,-69,-29,-30,-31,-70,39,39,-44,-117,-42,39,39,-40,39,-41,-66,39,39,39,39,39,39,39,39,39,-38,39,39,39,39,39,-94,39,-36,39,-39,-37,39,-119,-63,-105,-107,-111,-96,-34,-118,-35,39,39,-27,-95,39,-64,-28,-83,-65,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,57,60,61,62,63,64,65,68,69,70,74,75,77,78,82,88,99,101,105,125,126,127,128,133,136,146,151,154,159,166,172,173,174,175,176,177,178,179,182,185,195,198,203,209,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,40,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,145,-26,40,40,-19,-71,-90,-91,-53,-61,40,-43,-25,-24,-122,40,-49,-50,-68,-69,-29,-30,-31,-70,40,40,-44,-117,-42,40,40,-40,40,-41,-66,40,40,40,40,40,40,40,40,40,-38,40,40,40,40,40,-94,40,-36,40,-39,-37,40,-119,-63,-105,-107,-111,-96,-34,-118,-35,40,40,-27,-95,40,-64,-28,-83,-65,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,57,60,61,62,63,64,65,68,69,70,74,75,77,78,88,99,101,105,125,126,127,128,133,136,146,151,154,159,166,172,173,174,175,176,177,178,179,182,185,195,198,203,209,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,41,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,41,41,-19,-71,-90,-91,-53,-61,41,-43,-25,-24,-122,41,-49,-50,-68,-69,-29,-30,-31,-70,41,41,-44,-117,-42,41,41,-40,41,-41,-66,41,41,41,41,41,41,41,41,41,-38,41,41,41,41,41,-94,41,-36,41,-39,-37,41,-119,-63,-105,-107,-111,-96,-34,-118,-35,41,41,-27,-95,41,-64,-28,-83,-65,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,79,88,105,125,126,127,128,133,134,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,135,-26,-19,-71,-90,-91,-53,-61,183,42,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,42,-44,-117,-42,42,-40,42,-41,-66,42,42,42,42,42,42,42,42,42,-38,42,42,42,42,42,-94,42,-36,42,-39,-37,42,-119,-63,-105,-107,-111,-96,-34,-118,-35,42,42,-27,-95,42,-64,-28,-83,-65,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,136,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,203,210,212,214,216,221,222,223,224,225,226,239,242,244,245,246,251,252,253,254,255,265,268,270,271,272,273,277,278,279,280,281,282,290,291,292,293,296,297,303,305,307,308,312,313,314,],[43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,43,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,43,-44,-117,-42,43,-40,43,-41,-66,43,43,43,43,43,43,43,43,43,-38,43,43,43,43,43,-94,43,-36,43,-39,-37,43,-119,-63,-105,-107,-111,-96,-34,-118,-35,43,43,-27,-95,43,-64,-28,-83,-65,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,105,125,126,127,128,133,146,151,154,159,172,173,174,175,176,177,178,179,195,198,203,212,216,221,246,265,270,272,273,278,279,280,281,282,290,291,292,293,303,305,308,312,313,314,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,-19,-71,-90,-91,-53,-61,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,-44,-117,-42,-40,-41,-66,-38,-94,-36,-39,-37,-119,-63,-105,-107,-111,-96,-34,-118,-35,-27,-95,-64,-28,-83,-65,]),'RBRACKET':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,26,27,34,35,36,37,44,49,53,60,61,62,63,64,65,68,69,70,74,75,77,78,88,95,96,105,125,126,127,128,130,133,146,151,154,159,172,173,174,175,176,177,178,179,185,195,198,201,203,205,206,212,214,216,217,221,238,242,244,245,246,251,252,253,254,255,265,266,268,270,271,272,273,278,279,280,281,282,290,291,292,293,297,303,305,307,308,312,313,314,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-22,-59,-112,-113,-114,-3,-23,-120,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-60,-62,-26,159,-123,-19,-71,-90,-91,-53,-84,-61,-43,-25,-24,-122,-49,-50,-68,-69,-29,-30,-31,-70,221,-44,-117,236,-42,-124,-125,-40,246,-41,-85,-66,267,270,272,273,-38,278,279,280,281,282,-94,289,291,-36,293,-39,-37,-119,-63,-105,-107,-111,-96,-34,-118,-35,308,-27,-95,314,-64,-28,-83,-65,]),'LPAREN':([19,21,38,42,43,55,56,68,135,183,192,233,263,],[45,48,80,81,82,99,101,117,184,219,230,262,288,]),'QUESTION':([20,],[47,]),'ASSIGN':([21,46,51,52,55,58,86,193,194,208,215,275,],[50,85,93,94,100,104,149,231,232,240,247,295,]),'LBRACKET':([24,79,93,134,158,164,169,186,187,188,189,190,208,213,237,250,276,295,],[54,136,155,136,204,210,214,222,223,224,225,226,239,244,266,277,296,-121,]),'LESS':([30,33,64,67,68,69,70,71,74,75,93,126,127,128,284,],[57,76,-90,-91,-53,-51,-52,120,-92,-93,156,-90,-91,-53,120,]),'TEXT':([32,45,48,50,54,72,73,80,81,93,100,104,112,113,117,118,119,120,121,122,123,124,152,155,160,161,181,184,191,204,219,269,274,298,],[67,67,67,67,98,127,127,127,127,67,67,67,127,127,67,127,-72,-73,-74,-75,-76,-77,67,127,98,127,127,127,127,127,127,67,127,127,]),'NUMBER':([32,45,48,50,72,73,80,81,93,100,104,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,152,155,161,181,184,191,204,219,231,269,274,298,],[69,69,69,69,69,69,69,69,69,69,69,69,-54,-55,-56,-57,-58,69,69,69,69,-72,-73,-74,-75,-76,-77,69,69,69,69,69,69,69,69,260,69,69,69,]),'NDOUBLE':([32,45,48,50,72,73,80,81,93,100,104,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,152,155,161,181,184,191,204,219,232,269,274,298,],[70,70,70,70,70,70,70,70,70,70,70,70,-54,-55,-56,-57,-58,70,70,70,70,-72,-73,-74,-75,-76,-77,70,70,70,70,70,70,70,70,261,70,70,70,]),'NOT':([32,45,48,50,80,81,93,100,104,112,113,117,152,184,191,219,269,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LSBRACKET':([32,45,48,50,93,100,104,117,152,247,269,],[73,73,73,73,73,73,73,73,73,274,73,]),'TRUE':([32,45,48,50,72,73,80,81,93,100,104,112,113,117,118,119,120,121,122,123,124,152,155,161,181,184,191,204,219,269,274,298,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-72,-73,-74,-75,-76,-77,74,74,74,74,74,74,74,74,74,74,74,]),'FALSE':([32,45,48,50,72,73,80,81,93,100,104,112,113,117,118,119,120,121,122,123,124,152,155,161,181,184,191,204,219,269,274,298,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-72,-73,-74,-75,-76,-77,75,75,75,75,75,75,75,75,75,75,75,]),'ELSE':([34,77,279,308,314,],[79,134,-63,-64,-65,]),'GREATER':([39,40,41,64,67,68,69,70,71,74,75,102,103,126,127,128,202,218,240,284,],[-86,-87,-89,-90,-91,-53,-51,-52,119,-92,-93,170,-88,-90,-91,-53,237,248,269,119,]),'RPAREN':([45,48,60,61,62,63,64,65,68,69,70,74,75,84,87,88,89,91,99,101,117,125,126,127,128,137,138,139,140,141,151,163,165,168,172,173,174,175,176,177,178,179,199,200,207,220,241,243,249,257,258,262,264,283,286,288,299,300,309,310,311,316,],[83,88,-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,147,150,-26,151,-32,164,169,88,-71,-90,-91,-53,186,187,188,189,190,-25,208,-78,213,-49,-50,-68,-69,-29,-30,-31,-70,-33,-115,-80,250,-79,-81,276,-106,285,287,-116,-104,-108,304,-101,-102,-100,-110,-109,-103,]),'THIS':([48,235,],[90,90,]),'COMMA':([60,61,62,63,64,65,68,69,70,74,75,88,89,91,96,125,126,127,128,130,131,132,151,163,165,168,172,173,174,175,176,177,178,179,199,200,206,207,241,243,286,309,],[-45,-46,-47,-48,-49,-67,-53,-51,-52,-92,-93,-26,152,-32,160,-71,-90,-91,-53,181,182,-127,-25,209,-78,209,-49,-50,-68,-69,-29,-30,-31,-70,-33,235,-125,-80,-79,-81,302,315,]),'EQUALS':([64,67,68,69,70,71,74,75,126,127,128,284,],[-90,-91,-53,-51,-52,121,-92,-93,-90,-91,-53,121,]),'GREATER_EQUAL':([64,67,68,69,70,71,74,75,126,127,128,284,],[-90,-91,-53,-51,-52,122,-92,-93,-90,-91,-53,122,]),'LESS_EQUAL':([64,67,68,69,70,71,74,75,126,127,128,284,],[-90,-91,-53,-51,-52,123,-92,-93,-90,-91,-53,123,]),'NOT_EQUALS':([64,67,68,69,70,71,74,75,126,127,128,284,],[-90,-91,-53,-51,-52,124,-92,-93,-90,-91,-53,124,]),'PLUS':([64,68,69,70,128,172,],[107,-53,-51,-52,-53,107,]),'MINUS':([64,68,69,70,128,172,],[108,-53,-51,-52,-53,108,]),'TIMES':([64,68,69,70,128,172,],[109,-53,-51,-52,-53,109,]),'DIVIDE':([64,68,69,70,128,172,],[110,-53,-51,-52,-53,110,]),'INT_DIVIDE':([64,68,69,70,128,172,],[111,-53,-51,-52,-53,111,]),'AND':([65,69,70,74,75,125,126,127,128,179,],[112,-51,-52,-92,-93,-71,-90,-91,-53,-70,]),'OR':([65,69,70,74,75,125,126,127,128,179,],[113,-51,-52,-92,-93,-71,-90,-91,-53,-70,]),'DOT':([66,67,68,90,148,180,197,],[114,115,116,153,196,-82,234,]),'RSBRACKET':([69,70,74,75,126,127,128,129,130,217,294,],[-51,-52,-92,-93,-90,-91,-53,180,-84,-85,306,]),'STDIN':([85,149,],[148,197,]),'CONST':([94,],[158,]),'COLON':([97,98,230,302,],[161,-126,259,259,]),'REQUIRED':([99,101,209,],[166,166,166,]),'LENGTH':([114,115,116,],[176,177,178,]),'IN':([192,285,],[229,301,]),'READLINESYNC':([196,234,],[233,263,]),'INCREMENT':([284,],[299,]),'DECREMENT':([284,],[300,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,136,210,214,222,223,224,225,226,239,244,277,296,],[2,185,242,245,251,252,253,254,255,268,271,297,307,]),'statement':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[3,44,3,44,3,3,3,3,3,3,3,3,44,3,44,44,44,44,44,44,44,44,3,3,44,44,]),'print':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'data_input':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'set':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'map':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constructor':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'control_structures':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list_definition':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'variable_definition':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'variable_usage':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call_function':([0,2,32,45,48,50,93,100,104,117,136,152,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,269,271,277,296,297,307,],[14,14,63,63,63,63,63,63,63,63,14,63,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,63,14,14,14,14,14,]),'return':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'map_declaration':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'control_structures_if_else':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'control_structures_for':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'control_structures_while':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'type':([0,2,57,99,101,136,166,182,185,209,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[28,28,102,162,162,28,211,218,28,162,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'if_block':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'for_classic':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'for_in':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'for_each':([0,2,136,185,210,214,222,223,224,225,226,239,242,244,245,251,252,253,254,255,268,271,277,296,297,307,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'map_assignment':([24,],[53,]),'expression':([32,45,48,50,93,100,104,117,152,269,],[59,84,91,92,157,167,171,91,199,292,]),'operations':([32,45,48,50,93,100,104,106,117,152,269,],[60,60,60,60,60,60,60,173,60,60,60,]),'conditions':([32,45,48,50,80,81,93,100,104,112,113,117,152,184,191,219,269,],[61,61,61,61,137,138,61,61,61,174,175,61,61,220,228,249,61,]),'length':([32,45,48,50,93,100,104,117,152,269,],[62,62,62,62,62,62,62,62,62,62,]),'operand':([32,45,48,50,72,73,80,81,93,100,104,106,112,113,117,118,152,155,161,181,184,191,204,219,269,274,298,],[64,64,64,64,126,126,126,126,64,64,64,172,126,126,64,126,64,126,126,126,126,126,126,126,64,126,126,]),'condition':([32,45,48,50,80,81,93,100,104,112,113,117,152,184,191,219,269,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'call_list':([32,45,48,50,93,100,104,117,152,269,],[66,66,66,66,66,66,66,66,66,66,]),'value':([32,45,48,50,72,73,80,81,93,100,104,112,113,117,118,152,155,161,181,184,191,204,219,269,274,298,],[71,71,71,71,125,130,71,71,71,71,71,71,71,71,179,71,130,206,130,71,71,130,71,71,130,309,]),'else_if_blocks':([34,],[77,]),'else_block':([34,77,],[78,133,]),'constructor_parenthesis_content':([48,235,],[87,264,]),'argument_list':([48,117,],[89,89,]),'map_contents':([54,160,],[95,205,]),'map_content':([54,160,],[96,96,]),'key_value':([54,160,],[97,97,]),'operator':([64,172,],[106,106,]),'comparator':([71,284,],[118,298,]),'value_list':([73,155,181,204,274,],[129,201,217,238,294,]),'key_type':([76,],[131,]),'for_classic_parenthesis_content':([82,],[139,]),'for_in_parenthesis_content':([82,],[140,]),'for_each_parenthesis_content':([82,],[141,]),'for_classic_initialization':([82,],[142,]),'parameter_list':([99,101,],[163,168,]),'parameter':([99,101,209,],[165,165,241,]),'for_classic_conditions':([191,],[227,]),'for_each_parenthesis_parenthesis_content':([230,302,],[258,311,]),'for_classic_changes':([256,315,],[283,316,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizador_sintactico.py',14),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',17),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizador_sintactico.py',18),
  ('statement -> print','statement',1,'p_statement','analizador_sintactico.py',21),
  ('statement -> data_input','statement',1,'p_statement','analizador_sintactico.py',22),
  ('statement -> set','statement',1,'p_statement','analizador_sintactico.py',23),
  ('statement -> map','statement',1,'p_statement','analizador_sintactico.py',24),
  ('statement -> constructor','statement',1,'p_statement','analizador_sintactico.py',25),
  ('statement -> control_structures','statement',1,'p_statement','analizador_sintactico.py',26),
  ('statement -> function','statement',1,'p_statement','analizador_sintactico.py',27),
  ('statement -> list_definition','statement',1,'p_statement','analizador_sintactico.py',28),
  ('statement -> variable_definition','statement',1,'p_statement','analizador_sintactico.py',29),
  ('statement -> variable_usage','statement',1,'p_statement','analizador_sintactico.py',30),
  ('statement -> call_function','statement',1,'p_statement','analizador_sintactico.py',31),
  ('statement -> return','statement',1,'p_statement','analizador_sintactico.py',32),
  ('statement -> COMMENT_MULTI','statement',1,'p_statement','analizador_sintactico.py',33),
  ('statement -> COMMENT_SINGLE','statement',1,'p_statement','analizador_sintactico.py',34),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',35),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','analizador_sintactico.py',38),
  ('control_structures -> control_structures_if_else','control_structures',1,'p_control_structures','analizador_sintactico.py',42),
  ('control_structures -> control_structures_for','control_structures',1,'p_control_structures','analizador_sintactico.py',43),
  ('control_structures -> control_structures_while','control_structures',1,'p_control_structures','analizador_sintactico.py',44),
  ('variable_usage -> ID SEMICOLON','variable_usage',2,'p_variable_usage','analizador_sintactico.py',47),
  ('variable_usage -> ID ASSIGN expression SEMICOLON','variable_usage',4,'p_variable_usage','analizador_sintactico.py',48),
  ('call_function -> ID LPAREN argument_list RPAREN','call_function',4,'p_call_function','analizador_sintactico.py',59),
  ('call_function -> ID LPAREN RPAREN','call_function',3,'p_call_function','analizador_sintactico.py',60),
  ('data_input -> STRING ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','data_input',9,'p_data_input','analizador_sintactico.py',77),
  ('data_input -> STRING QUESTION ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','data_input',10,'p_data_input','analizador_sintactico.py',78),
  ('length -> call_list DOT LENGTH','length',3,'p_length','analizador_sintactico.py',81),
  ('length -> TEXT DOT LENGTH','length',3,'p_length','analizador_sintactico.py',82),
  ('length -> ID DOT LENGTH','length',3,'p_length','analizador_sintactico.py',83),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizador_sintactico.py',87),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizador_sintactico.py',88),
  ('function -> type ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET','function',8,'p_function','analizador_sintactico.py',97),
  ('function -> VOID ID LPAREN parameter_list RPAREN LBRACKET statement_list RBRACKET','function',8,'p_function','analizador_sintactico.py',98),
  ('function -> type ID LPAREN RPAREN LBRACKET statement_list RBRACKET','function',7,'p_function','analizador_sintactico.py',99),
  ('function -> VOID ID LPAREN RPAREN LBRACKET statement_list RBRACKET','function',7,'p_function','analizador_sintactico.py',100),
  ('function -> VOID ID LPAREN RPAREN LBRACKET RBRACKET','function',6,'p_function','analizador_sintactico.py',101),
  ('function -> VOID ID LPAREN parameter_list RPAREN LBRACKET RBRACKET','function',7,'p_function','analizador_sintactico.py',102),
  ('variable_definition -> type ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',114),
  ('variable_definition -> DYNAMIC ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',115),
  ('variable_definition -> VAR ID ASSIGN expression SEMICOLON','variable_definition',5,'p_variable_definition','analizador_sintactico.py',116),
  ('print -> PRINT LPAREN RPAREN SEMICOLON','print',4,'p_print','analizador_sintactico.py',127),
  ('print -> PRINT LPAREN expression RPAREN SEMICOLON','print',5,'p_print','analizador_sintactico.py',128),
  ('expression -> operations','expression',1,'p_expression','analizador_sintactico.py',133),
  ('expression -> conditions','expression',1,'p_expression','analizador_sintactico.py',134),
  ('expression -> length','expression',1,'p_expression','analizador_sintactico.py',135),
  ('expression -> call_function','expression',1,'p_expression','analizador_sintactico.py',136),
  ('operations -> operand','operations',1,'p_operations','analizador_sintactico.py',140),
  ('operations -> operand operator operations','operations',3,'p_operations','analizador_sintactico.py',141),
  ('operand -> NUMBER','operand',1,'p_operand','analizador_sintactico.py',146),
  ('operand -> NDOUBLE','operand',1,'p_operand','analizador_sintactico.py',147),
  ('operand -> ID','operand',1,'p_operand','analizador_sintactico.py',148),
  ('operator -> PLUS','operator',1,'p_operator','analizador_sintactico.py',153),
  ('operator -> MINUS','operator',1,'p_operator','analizador_sintactico.py',154),
  ('operator -> TIMES','operator',1,'p_operator','analizador_sintactico.py',155),
  ('operator -> DIVIDE','operator',1,'p_operator','analizador_sintactico.py',156),
  ('operator -> INT_DIVIDE','operator',1,'p_operator','analizador_sintactico.py',157),
  ('control_structures_if_else -> if_block','control_structures_if_else',1,'p_control_structures_if_else','analizador_sintactico.py',162),
  ('control_structures_if_else -> if_block else_if_blocks','control_structures_if_else',2,'p_control_structures_if_else','analizador_sintactico.py',163),
  ('control_structures_if_else -> if_block else_if_blocks else_block','control_structures_if_else',3,'p_control_structures_if_else','analizador_sintactico.py',164),
  ('control_structures_if_else -> if_block else_block','control_structures_if_else',2,'p_control_structures_if_else','analizador_sintactico.py',165),
  ('if_block -> IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKET','if_block',7,'p_if_block','analizador_sintactico.py',168),
  ('else_if_blocks -> ELSE IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKET','else_if_blocks',8,'p_else_if_blocks','analizador_sintactico.py',171),
  ('else_if_blocks -> else_if_blocks ELSE IF LPAREN conditions RPAREN LBRACKET statement_list RBRACKET','else_if_blocks',9,'p_else_if_blocks','analizador_sintactico.py',172),
  ('else_block -> ELSE LBRACKET statement_list RBRACKET','else_block',4,'p_else_block','analizador_sintactico.py',175),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',178),
  ('conditions -> condition AND conditions','conditions',3,'p_conditions','analizador_sintactico.py',179),
  ('conditions -> condition OR conditions','conditions',3,'p_conditions','analizador_sintactico.py',180),
  ('condition -> value comparator value','condition',3,'p_condition','analizador_sintactico.py',183),
  ('condition -> NOT value','condition',2,'p_condition','analizador_sintactico.py',184),
  ('comparator -> GREATER','comparator',1,'p_comparator','analizador_sintactico.py',187),
  ('comparator -> LESS','comparator',1,'p_comparator','analizador_sintactico.py',188),
  ('comparator -> EQUALS','comparator',1,'p_comparator','analizador_sintactico.py',189),
  ('comparator -> GREATER_EQUAL','comparator',1,'p_comparator','analizador_sintactico.py',190),
  ('comparator -> LESS_EQUAL','comparator',1,'p_comparator','analizador_sintactico.py',191),
  ('comparator -> NOT_EQUALS','comparator',1,'p_comparator','analizador_sintactico.py',192),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','analizador_sintactico.py',195),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','analizador_sintactico.py',196),
  ('parameter -> type ID','parameter',2,'p_parameter','analizador_sintactico.py',203),
  ('parameter -> REQUIRED type ID','parameter',3,'p_parameter','analizador_sintactico.py',204),
  ('call_list -> LSBRACKET value_list RSBRACKET','call_list',3,'p_call_list','analizador_sintactico.py',210),
  ('list_definition -> LIST LESS type GREATER ID ASSIGN LSBRACKET value_list RSBRACKET SEMICOLON','list_definition',10,'p_list_definition','analizador_sintactico.py',216),
  ('value_list -> value','value_list',1,'p_value_list','analizador_sintactico.py',220),
  ('value_list -> value COMMA value_list','value_list',3,'p_value_list','analizador_sintactico.py',221),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',224),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',225),
  ('type -> STRING','type',1,'p_type','analizador_sintactico.py',226),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',227),
  ('value -> operand','value',1,'p_value','analizador_sintactico.py',231),
  ('value -> TEXT','value',1,'p_value','analizador_sintactico.py',232),
  ('value -> TRUE','value',1,'p_value_bool','analizador_sintactico.py',236),
  ('value -> FALSE','value',1,'p_value_bool','analizador_sintactico.py',237),
  ('set -> VAR ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON','set',7,'p_set','analizador_sintactico.py',253),
  ('set -> VAR ID ASSIGN LESS STRING GREATER LBRACKET RBRACKET SEMICOLON','set',9,'p_set','analizador_sintactico.py',254),
  ('set -> FINAL ID ASSIGN CONST LBRACKET value_list RBRACKET SEMICOLON','set',8,'p_set','analizador_sintactico.py',255),
  ('for_classic_initialization -> INT ID ASSIGN NUMBER','for_classic_initialization',4,'p_for_classic_initialization','analizador_sintactico.py',264),
  ('for_classic_initialization -> DOUBLE ID ASSIGN NDOUBLE','for_classic_initialization',4,'p_for_classic_initialization','analizador_sintactico.py',265),
  ('for_classic_conditions -> conditions','for_classic_conditions',1,'p_for_classic_conditions','analizador_sintactico.py',268),
  ('for_classic_changes -> ID comparator value','for_classic_changes',3,'p_for_classic_changes','analizador_sintactico.py',271),
  ('for_classic_changes -> ID INCREMENT','for_classic_changes',2,'p_for_classic_changes','analizador_sintactico.py',272),
  ('for_classic_changes -> ID DECREMENT','for_classic_changes',2,'p_for_classic_changes','analizador_sintactico.py',273),
  ('for_classic_changes -> ID comparator value COMMA for_classic_changes','for_classic_changes',5,'p_for_classic_changes','analizador_sintactico.py',274),
  ('for_classic_parenthesis_content -> for_classic_initialization SEMICOLON for_classic_conditions SEMICOLON for_classic_changes','for_classic_parenthesis_content',5,'p_for_classic_parenthesis_content','analizador_sintactico.py',277),
  ('for_classic -> FOR LPAREN for_classic_parenthesis_content RPAREN LBRACKET statement_list RBRACKET','for_classic',7,'p_for_classic','analizador_sintactico.py',280),
  ('for_in_parenthesis_content -> FINAL ID IN ID','for_in_parenthesis_content',4,'p_for_in_parenthesis_content','analizador_sintactico.py',283),
  ('for_in -> FOR LPAREN for_in_parenthesis_content RPAREN LBRACKET statement_list RBRACKET','for_in',7,'p_for_in','analizador_sintactico.py',286),
  ('for_each_parenthesis_parenthesis_content -> COLON ID','for_each_parenthesis_parenthesis_content',2,'p_for_each_parenthesis_parenthesis_content','analizador_sintactico.py',289),
  ('for_each_parenthesis_parenthesis_content -> COLON ID COMMA for_each_parenthesis_parenthesis_content','for_each_parenthesis_parenthesis_content',4,'p_for_each_parenthesis_parenthesis_content','analizador_sintactico.py',290),
  ('for_each_parenthesis_content -> FINAL ID LPAREN for_each_parenthesis_parenthesis_content RPAREN IN ID','for_each_parenthesis_content',7,'p_for_each_parenthesis_content','analizador_sintactico.py',293),
  ('for_each -> FOR LPAREN for_each_parenthesis_content RPAREN LBRACKET statement_list RBRACKET','for_each',7,'p_for_each','analizador_sintactico.py',296),
  ('control_structures_for -> for_classic','control_structures_for',1,'p_control_structures_for','analizador_sintactico.py',299),
  ('control_structures_for -> for_in','control_structures_for',1,'p_control_structures_for','analizador_sintactico.py',300),
  ('control_structures_for -> for_each','control_structures_for',1,'p_control_structures_for','analizador_sintactico.py',301),
  ('constructor_parenthesis_content -> THIS DOT ID','constructor_parenthesis_content',3,'p_constructor_parenthesis_content','analizador_sintactico.py',308),
  ('constructor_parenthesis_content -> THIS DOT ID COMMA constructor_parenthesis_content','constructor_parenthesis_content',5,'p_constructor_parenthesis_content','analizador_sintactico.py',309),
  ('constructor -> ID LPAREN constructor_parenthesis_content RPAREN SEMICOLON','constructor',5,'p_constructor','analizador_sintactico.py',314),
  ('function -> type ID LPAREN parameter_list RPAREN ASSIGN GREATER expression','function',8,'p_arrow_function','analizador_sintactico.py',323),
  ('control_structures_while -> WHILE LPAREN conditions RPAREN LBRACKET statement_list RBRACKET','control_structures_while',7,'p_control_structures_while','analizador_sintactico.py',329),
  ('map -> map_declaration map_assignment','map',2,'p_map','analizador_sintactico.py',336),
  ('map_declaration -> MAP LESS key_type COMMA type GREATER ID ASSIGN','map_declaration',8,'p_map_declaration','analizador_sintactico.py',342),
  ('map_assignment -> LBRACKET map_contents RBRACKET','map_assignment',3,'p_map_assignment','analizador_sintactico.py',348),
  ('map_contents -> map_content','map_contents',1,'p_map_contents','analizador_sintactico.py',354),
  ('map_contents -> map_content COMMA map_contents','map_contents',3,'p_map_contents','analizador_sintactico.py',355),
  ('map_content -> key_value COLON value','map_content',3,'p_map_content','analizador_sintactico.py',361),
  ('key_value -> TEXT','key_value',1,'p_key_value','analizador_sintactico.py',367),
  ('key_type -> STRING','key_type',1,'p_key_type','analizador_sintactico.py',373),
]
